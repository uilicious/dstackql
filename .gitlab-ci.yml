stages:
  - build
  - prod-build

#======================================================
# Build on any branch
#======================================================
branch-build:
  # Initial "build" stage
  stage: build
  # Build using the offical docker image
  image: docker:18.09.7
  # Docker in docker socket passing 
  services:
    - docker:dind
  variables:
    # Submodule cloning is required for the build
    GIT_SUBMODULE_STRATEGY: recursive
  # Setup the build environment
  before_script:
    # Login in to our GCR registry, these variables should be configured in the group
    - echo -n $GCR_REGISTRY_PASSWORD | docker login -u $GCR_REGISTRY_USER --password-stdin $GCR_REGISTRY
    # Pull previously built containers, this may help speed up the build process
    - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:dev || true
  # Lets do the actual build
  script:
    - docker build -t "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA" .
  except:
    - dev
    - main
    - master

#======================================================
# Dev build
#======================================================
dev-build-container:
  # Initial "build" stage
  stage: build
  # Build using the offical docker image
  image: docker:18.09.7
  # Docker in docker socket passing 
  services:
    - docker:dind
  variables:
    # Submodule cloning is required for the build
    GIT_SUBMODULE_STRATEGY: recursive
  # Setup the build environment
  before_script:
    # Login in to our GCR registry, these variables should be configured in the group
    - echo -n $GCR_REGISTRY_PASSWORD | docker login -u $GCR_REGISTRY_USER --password-stdin $GCR_REGISTRY
    # Pull previously built containers, this may help speed up the build process
    - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:dev || true
  # Lets do the actual build
  script:
    - docker build -t "$GCR_REGISTRY/uilicious-stack/dstackql:dev" -t "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA" .
    - docker push "$GCR_REGISTRY/uilicious-stack/dstackql:dev"
    - docker push "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA"
  only:
    - dev

#======================================================
# Staging build
#======================================================
staging-build-container:
  # Initial "build" stage
  stage: build
  # Build using the offical docker image
  image: docker:18.09.7
  # Docker in docker socket passing 
  services:
    - docker:dind
  variables:
    # Submodule cloning is required for the build
    GIT_SUBMODULE_STRATEGY: recursive
  # Setup the build environment
  before_script:
    # Login in to our GCR registry, these variables should be configured in the group
    - echo -n $GCR_REGISTRY_PASSWORD | docker login -u $GCR_REGISTRY_USER --password-stdin $GCR_REGISTRY
    # Pull previously built containers, this may help speed up the build process
    - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:dev || true
    - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:staging || true
    # - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA || true
  # Lets do the actual build
  script:
    - docker build -t "$GCR_REGISTRY/uilicious-stack/dstackql:staging" -t "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA" .
    - docker push "$GCR_REGISTRY/uilicious-stack/dstackql:staging"
    - docker push "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA"
  only:
    - master
    - main

#======================================================
# Production build retagging
#======================================================
prod-build-container:
  # Initial "build" stage
  stage: prod-build
  # needs: [staging-build-container]
  # Trigger manually
  when: manual
  # Lock to one build at a time
  resource_group: build
  # Build using the offical docker image
  image: docker:18.09.7
  # Docker in docker socket passing 
  services:
    - docker:dind
  variables:
    # Disable git as its not needed
    GIT_STRATEGY: none
  # Setup the build environment (before git clone)
  before_script:
    # Login in to our GCR registry, these variables should be configured in the group
    - echo -n $GCR_REGISTRY_PASSWORD | docker login -u $GCR_REGISTRY_USER --password-stdin $GCR_REGISTRY
    # Pull previously built containers, this may help speed up the build process
    - docker pull $GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA || true
  # Lets do the actual build
  script:
    - docker tag "$GCR_REGISTRY/uilicious-stack/dstackql:$CI_COMMIT_SHA" "$GCR_REGISTRY/uilicious-stack/dstackql:prod"
    - docker push "$GCR_REGISTRY/uilicious-stack/dstackql:prod"
  only:
    - master
    - main
